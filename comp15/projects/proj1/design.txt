Design Document

Customers will be loaded into a linked list in the SUPERMARKET class, and a CUSTOMER will have an associated name, number of items, arrival time, checkout time, and waiting time. In addition each customer will have a bool stating whether or not they are eligible for an express lane. With every iteration of TIME, the list will be checked for customers finishing their "payment," leaving the front of the line to approach the register, and customers entering the line at their given arrival time.

The mini marat simulation will have arriving customers enter a single QUEUE. The front of the queue will have an associated pointer, and there will be an additional pointer to the "register." When a customer reaches the register their wait time is over. Customers will stay at the register until the (current time - #items)==checkout time -- when they have waited at the register for time proportional to their number of items. Their information will be printed and register will be opened, allowing the next customer (at front) to move to the register.

The supermarket with 4 registers, each with an associated queue, will have the added step of determining the shortest queue at any given time. Customers will go the the queue with the fewest number of ITEMS IN LINE, and the simulation runs normally otherwise. The supermarket with 2 express registers has the additional step of determining, when a customer arrives, if they are eligible for express lanes. They will then go to their shortest line they are eligible for. Express customers have the option of entering a non-express lane if it is shorter than either express lane.

The fourth supermarket, with one queue and 4 registers, will have additional pointers to the 3 extra registers. This way, regardless of which register becomes available the customer at the front of the line can move to it. The registers will be checked in sequence, so multiple customers may exit the queue to move to registers at the same time.